//exception handler
loadi(2,15);
loadi(3,16);

//exit
loadi(22,35);
loadi(23,36);

//timer 
loadi(4,17);
loadi(5,18);

//write
loadi(16,29);
loadi(17,30);

//library
loadi(63,13);
loadi(64,14);

//init
loadi(65,7);
loadi(66,8);

//prog_1                    
loadi(85,69);            

//setting page table for init
PTBR=PAGE_TABLE_BASE+20;
PTLR=10;

//library
[PTBR+0]=63;
[PTBR+1]="0100";
[PTBR+2]=64;
[PTBR+3]="0100";

//heap
[PTBR+4]=78;
[PTBR+5]="0110";
[PTBR+6]=79;
[PTBR+7]="0110";

//code
[PTBR+8]=65;
[PTBR+9]="0100";
[PTBR+10]=66;
[PTBR+11]="0100";
[PTBR+12]=-1;
[PTBR+13]="0000";
[PTBR+14]=-1;
[PTBR+15]="0000";

//stack
[PTBR+16]=76;
[PTBR+17]="0110";
[PTBR+18]=77;
[PTBR+19]="0110";

//setting process table for init
[PROCESS_TABLE + 17]=1;
[PROCESS_TABLE + 20]=CREATED;
[PROCESS_TABLE + 27]=80;
[PROCESS_TABLE + 28]=0;
[PROCESS_TABLE + 29]=8*512;
[PROCESS_TABLE + 30]=PAGE_TABLE_BASE+20;
[PROCESS_TABLE + 31]=10;

[76*512]=[65*512+1];


//setting page table for prog1
PTBR=PAGE_TABLE_BASE+40;
PTLR=10;

//library
[PTBR+0]=63;
[PTBR+1]="0100";
[PTBR+2]=64;
[PTBR+3]="0100";

//heap
[PTBR+4]=83;
[PTBR+5]="0110";
[PTBR+6]=84;
[PTBR+7]="0110";

//code
[PTBR+8]=85;
[PTBR+9]="0100";
[PTBR+10]=-1;
[PTBR+11]="0100";
[PTBR+12]=-1;
[PTBR+13]="0000";
[PTBR+14]=-1;
[PTBR+15]="0000";

//stack
[PTBR+16]=86;
[PTBR+17]="0110";
[PTBR+18]=87;
[PTBR+19]="0110";

//setting process table for prog1
[PROCESS_TABLE + 33]=2;
[PROCESS_TABLE + 36]=CREATED;
[PROCESS_TABLE + 43]=88;
[PROCESS_TABLE + 44]=0;
[PROCESS_TABLE + 45]=8*512;
[PROCESS_TABLE + 46]=PAGE_TABLE_BASE+40;
[PROCESS_TABLE + 47]=10;

[86*512]=[85*512+1];
return;


